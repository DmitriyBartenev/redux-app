{"version":3,"sources":["hooks/http.hook.js","components/heroesList/heroesSlice.js","components/heroesListItem/HeroesListItem.js","components/spinner/Spinner.js","components/heroesList/HeroesList.js","components/heroesAddForm/HeroesAddForm.js","components/heroesFilters/filtersSlice.js","components/heroesFilters/HeroesFilters.js","components/app/App.js","store/index.js","index.js"],"names":["useHttp","request","url","method","body","headers","fetch","response","ok","Error","status","json","data","fetchHeroes","createAsyncThunk","heroesSlice","createSlice","name","initialState","heroes","heroesLoadingStatus","reducers","heroCreated","state","action","push","payload","heroDeleted","filter","item","id","extraReducers","builder","addCase","pending","fulfilled","rejected","addDefaultCase","actions","reducer","heroesFetching","heroesFetched","heroesFetchingError","HeroesListItem","elementClassName","description","element","onDelete","className","src","alt","style","onClick","type","Spinner","role","HeroesList","filteredHeroesSelector","createSelector","filters","activeFilter","filteredHeroes","useSelector","dispatch","useDispatch","useEffect","useCallback","then","console","log","catch","err","arr","elements","length","CSSTransition","timeout","classNames","map","props","TransitionGroup","component","HeroesAddForm","useState","heroName","setHeroName","heroDescr","setHeroDescr","heroElement","setHeroElement","filtersLoadingStatus","onSubmit","e","preventDefault","newHero","uuidv4","JSON","stringify","res","htmlFor","required","placeholder","value","onChange","target","label","renderFilters","fetchFilters","filtersSlice","filtersChanged","filtersFetching","filtersFetched","filtersFetchingError","HeroesFilters","btnClass","App","stringMiddleware","next","store","configureStore","middleware","getDefaultMiddleware","concat","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30ccf2f9.chunk.js","sourcesContent":["import { useCallback } from \"react\";\n\nexport const useHttp = () => {\n    // const [process, setProcess] = useState('waiting');\n\n    const request = async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n\n        // setProcess('loading');\n\n        try {\n            const response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            return data;\n        } catch(e) {\n            // setProcess('error');\n            throw e;\n        }\n    };\n\n    // const clearError = useCallback(() => {\n        // setProcess('loading');\n    // }, []);\n\n    return {request, \n            // clearError, \n            // process, \n            // setProcess\n        }\n}","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport {useHttp} from '../../hooks/http.hook';\r\n\r\nconst initialState = {\r\n    heroes: [],\r\n    heroesLoadingStatus: 'idle'\r\n}\r\n\r\nexport const fetchHeroes = createAsyncThunk(\r\n    'heroes/heroesFetched',\r\n    () => {\r\n        const {request} = useHttp();\r\n        return request('http://localhost:3001/heroes');\r\n    }\r\n)\r\n\r\nconst heroesSlice = createSlice({\r\n    name: 'heroes',\r\n    initialState,\r\n    reducers: {\r\n        heroCreated: (state, action) => {\r\n            state.heroes.push(action.payload);\r\n        },\r\n        heroDeleted: (state, action) => {\r\n            state.heroes = state.heroes.filter(item => item.id !== action.payload);\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(fetchHeroes.pending, state => {state.heroesLoadingStatus = 'loading'})\r\n            .addCase(fetchHeroes.fulfilled, (state, action) => {\r\n                state.heroesLoadingStatus = 'idle';\r\n                state.heroes = action.payload;\r\n            })\r\n            .addCase(fetchHeroes.rejected, state => {state.heroesLoadingStatus = 'error'})\r\n            .addDefaultCase(() => {})\r\n    }\r\n});\r\n\r\nconst {actions, reducer} = heroesSlice;\r\n\r\nexport default reducer;\r\nexport const {\r\n    heroesFetching,\r\n    heroesFetched,\r\n    heroesFetchingError,\r\n    heroCreated,\r\n    heroDeleted\r\n} = actions;","\nconst HeroesListItem = ({name, description, element, onDelete}) => {\n\n    let elementClassName;\n\n    switch (element) {\n        case 'fire':\n            elementClassName = 'bg-danger bg-gradient';\n            break;\n        case 'water':\n            elementClassName = 'bg-primary bg-gradient';\n            break;\n        case 'wind':\n            elementClassName = 'bg-success bg-gradient';\n            break;\n        case 'earth':\n            elementClassName = 'bg-secondary bg-gradient';\n            break;\n        default:\n            elementClassName = 'bg-warning bg-gradient';\n    }\n\n    return (\n        <li \n            className={`card flex-row mb-4 shadow-lg text-white ${elementClassName}`}>\n            <img src=\"http://www.stpaulsteinbach.org/wp-content/uploads/2014/09/unknown-hero.jpg\" \n                 className=\"img-fluid w-25 d-inline\" \n                 alt=\"unknown hero\" \n                 style={{'objectFit': 'cover'}}/>\n            <div className=\"card-body\">\n                \n                <h3 className=\"card-title\">{name}</h3>\n                <p className=\"card-text\">{description}</p>\n            </div>\n            <span   onClick={onDelete} \n                    className=\"position-absolute top-0 start-100 translate-middle badge border rounded-pill bg-light\">\n                <button type=\"button\" className=\"btn-close btn-close\" aria-label=\"Close\"></button>\n            </span>\n        </li>\n    )\n}\n\nexport default HeroesListItem;","\nconst Spinner = () => {\n    return (\n        <div className=\"spinner-border mx-auto mt-5\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n        </div>\n    )\n}\n\nexport default Spinner;","import {useHttp} from '../../hooks/http.hook';\nimport { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector} from 'react-redux';\nimport {createSelector} from 'reselect';\nimport { CSSTransition, TransitionGroup} from 'react-transition-group';\n\nimport {fetchHeroes} from './heroesSlice';\nimport { heroDeleted } from './heroesSlice';\n\nimport HeroesListItem from \"../heroesListItem/HeroesListItem\";\nimport Spinner from '../spinner/Spinner';\n\nimport './heroesList.scss';\n\nconst HeroesList = () => {\n\n    const filteredHeroesSelector = createSelector(\n        (state) => state.filters.activeFilter,\n        (state) => state.heroes.heroes,\n        (filter, heroes) => {\n            if (filter === 'all'){\n                return heroes\n            }else{\n                return heroes.filter(item => item.element === filter) \n            }\n        }\n    );\n\n    const filteredHeroes = useSelector(filteredHeroesSelector)\n\n    const heroesLoadingStatus = useSelector(state => state.heroes.heroesLoadingStatus);\n    const dispatch = useDispatch();\n    const {request} = useHttp();\n\n    useEffect(() => {\n        dispatch(fetchHeroes(request));\n\n        // eslint-disable-next-line\n    }, []);\n\n    const onDelete = useCallback((id) => {\n        request(`http://localhost:3001/heroes/${id}`, \"DELETE\")\n            .then(data => console.log(data, 'Deleted'))\n            .then(dispatch(heroDeleted(id)))\n            .catch(err => console.log(err));\n        // eslint-disable-next-line  \n    }, [request]);\n\n    if (heroesLoadingStatus === \"loading\") {\n        return <Spinner/>;\n    } else if (heroesLoadingStatus === \"error\") {\n        return <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>\n    }\n\n    const renderHeroesList = (arr) => {\n        if (arr.length === 0) {\n            return (\n                <CSSTransition\n                    timeout={0}\n                    classNames=\"hero\">\n                    <h5 className=\"text-center mt-5\">Героев пока нет</h5>\n                </CSSTransition>\n            )\n        }\n\n        return arr.map(({id, ...props}) => {\n            return (\n                <CSSTransition \n                    key={id}\n                    timeout={500}\n                    classNames=\"hero\">\n                    <HeroesListItem  {...props} onDelete={() => onDelete(id)}/>\n                </CSSTransition>\n            )\n        })\n    }\n\n    const elements = renderHeroesList(filteredHeroes);\n    return (\n        <TransitionGroup component=\"ul\">\n            {elements}\n        </TransitionGroup>\n    )\n}\n\nexport default HeroesList;","import {useHttp} from '../../hooks/http.hook';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { heroCreated } from '../heroesList/heroesSlice';\n\nconst HeroesAddForm = () => {\n    const [heroName, setHeroName] = useState('');\n    const [heroDescr, setHeroDescr] = useState('');\n    const [heroElement, setHeroElement] = useState('');\n\n    const {filters, filtersLoadingStatus} = useSelector(state => state.filters);\n    const dispatch = useDispatch();\n    const {request} = useHttp();\n\n    const onSubmitHandler = (e) => {\n        e.preventDefault();\n        const newHero = {\n            id: uuidv4(),\n            name: heroName,\n            description: heroDescr,\n            element: heroElement\n        }\n\n        request(\"http://localhost:3001/heroes\", \"POST\", JSON.stringify(newHero))\n            .then(res => console.log(res, 'Отправка успешна'))\n            .then(dispatch(heroCreated(newHero)))\n            .catch(err => console.log(err));\n\n        setHeroName('');\n        setHeroDescr('');\n        setHeroElement('');\n    }\n\n    const renderFilters = (filters, status) => {\n        if (status === \"loading\") {\n            return <option>Загрузка элементов</option>\n        } else if (status === \"error\") {\n            return <option>Ошибка загрузки</option>\n        }\n        \n        if (filters && filters.length > 0 ) {\n            return filters.map(({name, label}) => {\n                // eslint-disable-next-line\n                if (name === 'all')  return;\n\n                return <option key={name} value={name}>{label}</option>\n            })\n        }\n    }\n\n    return (\n        <form className=\"border p-4 shadow-lg rounded\" onSubmit={onSubmitHandler}>\n            <div className=\"mb-3\">\n                <label htmlFor=\"name\" className=\"form-label fs-4\">Имя нового героя</label>\n                <input \n                    required\n                    type=\"text\" \n                    name=\"name\" \n                    className=\"form-control\" \n                    id=\"name\" \n                    placeholder=\"Как меня зовут?\"\n                    value={heroName}\n                    onChange={(e) => setHeroName(e.target.value)}/>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"text\" className=\"form-label fs-4\">Описание</label>\n                <textarea\n                    required\n                    name=\"text\" \n                    className=\"form-control\" \n                    id=\"text\" \n                    placeholder=\"Что я умею?\"\n                    style={{\"height\": '130px'}}\n                    value={heroDescr}\n                    onChange={(e) => setHeroDescr(e.target.value)}/>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"element\" className=\"form-label\">Выбрать элемент героя</label>\n                <select \n                    required\n                    className=\"form-select\" \n                    id=\"element\" \n                    name=\"element\"\n                    value={heroElement}\n                    onChange={(e) => setHeroElement(e.target.value)}>\n                    <option value=\"\">Я владею элементом...</option>\n                    {renderFilters(filters, filtersLoadingStatus)}\n                </select>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">Создать</button>\n        </form>\n    )\n}\n\nexport default HeroesAddForm;","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { useHttp } from \"../../hooks/http.hook\";\r\n\r\nconst initialState = {\r\n    filters: [],\r\n    filtersLoadingStatus: 'idle',\r\n    activeFilter: 'all'\r\n}\r\n\r\nexport const fetchFilters = createAsyncThunk(\r\n    'filters/filtersFetched',\r\n    async () => {\r\n        const {request} = useHttp();\r\n        return await request('http://localhost:3001/filters');\r\n    }\r\n)\r\n\r\nconst filtersSlice = createSlice({\r\n    name: 'filters',\r\n    initialState,\r\n    reducers: {\r\n        filtersChanged: (state, action) => {\r\n            state.activeFilter = action.payload;\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(fetchFilters.pending, state => {state.filtersLoadingStatus = 'loading'})\r\n            .addCase(fetchFilters.fulfilled, (state, action) => {\r\n                state.filtersLoadingStatus = 'idle';\r\n                state.filters = action.payload;\r\n            })\r\n            .addCase(fetchFilters.rejected, state => {state.filtersLoadingStatus = 'error'})\r\n            .addDefaultCase(() => {})\r\n    }\r\n});\r\n\r\nconst {actions, reducer} = filtersSlice;\r\n\r\nexport default reducer;\r\nexport const {\r\n    filtersFetching,\r\n    filtersFetched,\r\n    filtersFetchingError,\r\n    filtersChanged\r\n} = actions;","import {useHttp} from '../../hooks/http.hook';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\n\nimport { fetchFilters } from './filtersSlice';\nimport { filtersChanged } from './filtersSlice';\nimport Spinner from '../spinner/Spinner';\n\nconst HeroesFilters = () => {\n\n    const {filters, filtersLoadingStatus, activeFilter} = useSelector(state => state.filters);\n    const dispatch = useDispatch();\n    const {request} = useHttp();\n\n    useEffect(() => {\n        dispatch(fetchFilters(request));\n\n        // eslint-disable-next-line\n    }, []);\n\n    if (filtersLoadingStatus === \"loading\") {\n        return <Spinner/>;\n    } else if (filtersLoadingStatus === \"error\") {\n        return <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>\n    }\n\n    const renderFilters = (arr) => {\n        if (arr.length === 0) {\n            return <h5 className=\"text-center mt-5\">Фильтры не найдены</h5>\n        }\n\n        return arr.map(({name, className, label}) => {\n\n            const btnClass = classNames('btn', className, {\n                'active': name === activeFilter\n            });\n            \n            return <button \n                        key={name} \n                        id={name} \n                        className={btnClass}\n                        onClick={() => dispatch(filtersChanged(name))}\n                        >{label}</button>\n        })\n    }\n\n    const elements = renderFilters(filters);\n\n    return (\n        <div className=\"card shadow-lg mt-4\">\n            <div className=\"card-body\">\n                <p className=\"card-text\">Отфильтруйте героев по элементам</p>\n                <div className=\"btn-group\">\n                    {elements}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default HeroesFilters;","import HeroesList from '../heroesList/HeroesList';\nimport HeroesAddForm from '../heroesAddForm/HeroesAddForm';\nimport HeroesFilters from '../heroesFilters/HeroesFilters';\n\nimport './app.scss';\n\nconst App = () => {\n    \n    return (\n        <main className=\"app\">\n            <div className=\"content\">\n                <HeroesList/>\n                <div className=\"content__interactive\">\n                    <HeroesAddForm/>\n                    <HeroesFilters/>\n                </div>\n            </div>\n        </main>\n    )\n}\n\nexport default App;","import { configureStore } from '@reduxjs/toolkit';\nimport heroes from '../components/heroesList/heroesSlice';\nimport filters from '../components/heroesFilters/filtersSlice';\n\nconst stringMiddleware = () => (next) => (action) => {\n    if (typeof action === 'string') {\n        return next({\n            type: action\n        })\n    }\n    return next(action)\n};\n\nconst store = configureStore({\n    reducer: {heroes, filters},\n    middleware: getDefaultMiddleware => getDefaultMiddleware().concat(stringMiddleware),\n    devTools: process.env.NODE_ENV !== 'production',\n})\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/app/App';\nimport store from './store';\n\nimport './styles/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}